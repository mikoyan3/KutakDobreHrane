{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Perovic/Desktop/PIA/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../services/restoran.service\";\nconst _c0 = [\"canvas\"];\nexport class LayoutComponent {\n  constructor(http, restoranService) {\n    this.http = http;\n    this.restoranService = restoranService;\n    this.restoran = null;\n    this.zauzetiStolovi = [];\n    this.slobodniStolovi = [];\n    this.rezervacija = null;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        let rez = localStorage.getItem('rezervacija');\n        if (rez != null) _this.rezervacija = JSON.parse(rez);\n        let rezultat = yield lastValueFrom(_this.restoranService.getLayoutForRestoran(_this.rezervacija));\n        _this.restoran = rezultat.restoran;\n        _this.zauzetiStolovi = rezultat.zauzetiStolovi;\n        _this.slobodniStolovi = rezultat.slobodniStolovi;\n        _this.ctx = _this.canvas.nativeElement.getContext('2d');\n        _this.drawLayout(_this.restoran, _this.slobodniStolovi, _this.zauzetiStolovi);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n  drawLayout(restoran, slobodniStolovi, zauzetiStolovi) {\n    this.ctx.clearRect(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    const canvasWidth = this.canvas.nativeElement.width;\n    const canvasHeight = this.canvas.nativeElement.height;\n    const radius = 25;\n    const kitchenWidth = 75;\n    const kitchenHeight = 200;\n    const toiletWidth = 75;\n    const toiletHeight = 75;\n    // Trazimo da li postoji element van kanvasa tako sto nadjemo minimum i maksimum X i Y koordinate\n    let minX = Math.min(...slobodniStolovi.map(table => table.x), ...zauzetiStolovi.map(table => table.x), restoran.kitchen.x, restoran.toilets.x);\n    let minY = Math.min(...slobodniStolovi.map(table => table.y), ...zauzetiStolovi.map(table => table.y), restoran.kitchen.y, restoran.toilets.y);\n    let maxX = Math.max(...slobodniStolovi.map(table => table.x + radius * 2), ...zauzetiStolovi.map(table => table.x + radius * 2), restoran.kitchen.x + kitchenWidth, restoran.toilets.x + toiletWidth);\n    let maxY = Math.max(...slobodniStolovi.map(table => table.y + radius * 2), ...zauzetiStolovi.map(table => table.y + radius * 2), restoran.kitchen.y + kitchenHeight, restoran.toilets.y + toiletHeight);\n    let shiftX = 0;\n    let shiftY = 0;\n    if (minX < 0) {\n      // Ukoliko je minimum X van kanvasa, pomeramo ga za minX u desno\n      shiftX = -minX;\n    } else if (maxX > canvasWidth) {\n      // ukoliko je maximum X van kanvasa, pomeramo ga za razdaljinu ivice kanvasa do maximum X u levo\n      shiftX = canvasWidth - maxX;\n    }\n    if (minY < 0) {\n      // ukoliko je minimum Y van kanvasa, pomeramo ga za minY na gore\n      shiftY = -minY;\n    } else if (maxY > canvasHeight) {\n      // ukoliko je maximum Y van kanvasa, pomeramo ga za razdaljinu ivice kanvasa do maximum Y na dole\n      shiftY = canvasHeight - maxY;\n    }\n    const adjustPosition = (x, y) => {\n      return {\n        x: x + shiftX,\n        y: y + shiftY\n      };\n    };\n    slobodniStolovi.forEach(table => {\n      let {\n        x,\n        y\n      } = adjustPosition(table.x, table.y); // ako je potrebno podesavanje, pomerimo sve\n      const centerX = x + radius;\n      const centerY = y + radius;\n      this.ctx.beginPath();\n      this.ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n      this.ctx.fillStyle = 'white';\n      this.ctx.fill();\n      this.ctx.strokeStyle = 'black';\n      this.ctx.lineWidth = 2;\n      this.ctx.stroke();\n      this.ctx.closePath();\n      this.ctx.fillStyle = 'black';\n      this.ctx.textAlign = 'center';\n      this.ctx.textBaseline = 'middle';\n      this.ctx.fillText(`Table ${table.id}`, centerX, centerY);\n    });\n    zauzetiStolovi.forEach(table => {\n      let {\n        x,\n        y\n      } = adjustPosition(table.x, table.y); // ako je potrebno podesavanje, podesimo sve\n      const centerX = x + radius;\n      const centerY = y + radius;\n      this.ctx.beginPath();\n      this.ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n      this.ctx.fillStyle = 'red';\n      this.ctx.fill();\n      this.ctx.strokeStyle = 'black';\n      this.ctx.lineWidth = 2;\n      this.ctx.stroke();\n      this.ctx.closePath();\n      this.ctx.fillStyle = 'black';\n      this.ctx.textAlign = 'center';\n      this.ctx.textBaseline = 'middle';\n      this.ctx.fillText(`Table ${table.id}`, centerX, centerY);\n    });\n    let kitchenPos = adjustPosition(restoran.kitchen.x, restoran.kitchen.y); // ako je potrebno podesavanje, podesimo kuhinju\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillRect(kitchenPos.x, kitchenPos.y, kitchenWidth, kitchenHeight);\n    this.ctx.strokeStyle = 'black';\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(kitchenPos.x, kitchenPos.y, kitchenWidth, kitchenHeight);\n    this.ctx.fillStyle = 'black';\n    this.ctx.textAlign = 'start';\n    this.ctx.textBaseline = 'top';\n    this.ctx.fillText('Kuhinja', kitchenPos.x + 5, kitchenPos.y + 5);\n    let toiletPos = adjustPosition(restoran.toilets.x, restoran.toilets.y); // ako je potrebno podesavanje, podesimo toalet\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillRect(toiletPos.x, toiletPos.y, toiletWidth, toiletHeight);\n    this.ctx.strokeStyle = 'black';\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(toiletPos.x, toiletPos.y, toiletWidth, toiletHeight);\n    this.ctx.fillStyle = 'black';\n    this.ctx.textAlign = 'start';\n    this.ctx.textBaseline = 'top';\n    this.ctx.fillText('Toalet', toiletPos.x + 5, toiletPos.y + 5);\n  }\n  static #_ = this.ɵfac = function LayoutComponent_Factory(t) {\n    return new (t || LayoutComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.RestoranService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LayoutComponent,\n    selectors: [[\"app-layout\"]],\n    viewQuery: function LayoutComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n      }\n    },\n    inputs: {\n      layoutData: \"layoutData\"\n    },\n    decls: 3,\n    vars: 0,\n    consts: [[1, \"canvas-container\"], [\"width\", \"600\", \"height\", \"500\"], [\"canvas\", \"\"]],\n    template: function LayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"canvas\", 1, 2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".canvas-container[_ngcontent-%COMP%] {\\n    width: 600px; \\n    height: 500px; \\n    border: 2px solid black; \\n    display: inline-block; \\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n    display: block; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksY0FBYztBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYW52YXMtY29udGFpbmVyIHtcclxuICAgIHdpZHRoOiA2MDBweDsgXHJcbiAgICBoZWlnaHQ6IDUwMHB4OyBcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrOyBcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgXHJcbn1cclxuXHJcbmNhbnZhcyB7XHJcbiAgICBkaXNwbGF5OiBibG9jazsgXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["lastValueFrom","LayoutComponent","constructor","http","restoranService","restoran","zauzetiStolovi","slobodniStolovi","rezervacija","ngOnInit","_this","_asyncToGenerator","rez","localStorage","getItem","JSON","parse","rezultat","getLayoutForRestoran","ctx","canvas","nativeElement","getContext","drawLayout","error","console","log","clearRect","width","height","canvasWidth","canvasHeight","radius","kitchenWidth","kitchenHeight","toiletWidth","toiletHeight","minX","Math","min","map","table","x","kitchen","toilets","minY","y","maxX","max","maxY","shiftX","shiftY","adjustPosition","forEach","centerX","centerY","beginPath","arc","PI","fillStyle","fill","strokeStyle","lineWidth","stroke","closePath","textAlign","textBaseline","fillText","id","kitchenPos","fillRect","strokeRect","toiletPos","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","RestoranService","_2","selectors","viewQuery","LayoutComponent_Query","rf","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["C:\\Users\\Perovic\\Desktop\\PIA\\front\\src\\app\\layout\\layout.component.ts","C:\\Users\\Perovic\\Desktop\\PIA\\front\\src\\app\\layout\\layout.component.html"],"sourcesContent":["import { Component, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { LayoutResponse } from '../models/LayoutResponse';\nimport { HttpClient } from '@angular/common/http';\nimport { RestoranService } from '../services/restoran.service';\nimport { restoran } from '../models/restoran';\nimport { sto } from '../models/sto';\nimport { rezervacija } from '../models/rezervacija';\nimport { last, lastValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n  \n  @Input() layoutData: any; \n  @ViewChild('canvas', { static: true }) canvas: ElementRef<HTMLCanvasElement>;\n  private ctx: CanvasRenderingContext2D;\n  restoran: restoran = null;\n  zauzetiStolovi: sto[] = [];\n  slobodniStolovi: sto[] = [];\n  rezervacija: rezervacija = null;\n\n  constructor(private http: HttpClient, private restoranService: RestoranService) {}\n\n  \n  async ngOnInit(){\n    try{\n      let rez = localStorage.getItem('rezervacija')\n      if(rez != null) this.rezervacija = JSON.parse(rez);\n      let rezultat: any = await lastValueFrom(this.restoranService.getLayoutForRestoran(this.rezervacija))\n      this.restoran = rezultat.restoran;\n      this.zauzetiStolovi = rezultat.zauzetiStolovi;\n      this.slobodniStolovi = rezultat.slobodniStolovi;\n      this.ctx  = this.canvas.nativeElement.getContext('2d');\n      this.drawLayout(this.restoran, this.slobodniStolovi, this.zauzetiStolovi);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  private drawLayout(restoran: restoran, slobodniStolovi: sto[], zauzetiStolovi: sto[]): void {\n    this.ctx.clearRect(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n\n    const canvasWidth = this.canvas.nativeElement.width;\n    const canvasHeight = this.canvas.nativeElement.height;\n    const radius = 25;\n    const kitchenWidth = 75;\n    const kitchenHeight = 200;\n    const toiletWidth = 75;\n    const toiletHeight = 75;\n    // Trazimo da li postoji element van kanvasa tako sto nadjemo minimum i maksimum X i Y koordinate\n    let minX = Math.min( \n        ...slobodniStolovi.map(table => table.x),\n        ...zauzetiStolovi.map(table => table.x),\n        restoran.kitchen.x,\n        restoran.toilets.x\n    );\n    let minY = Math.min(\n        ...slobodniStolovi.map(table => table.y),\n        ...zauzetiStolovi.map(table => table.y),\n        restoran.kitchen.y,\n        restoran.toilets.y\n    );\n    let maxX = Math.max(\n        ...slobodniStolovi.map(table => table.x + radius * 2),\n        ...zauzetiStolovi.map(table => table.x + radius * 2),\n        restoran.kitchen.x + kitchenWidth,\n        restoran.toilets.x + toiletWidth\n    );\n    let maxY = Math.max(\n        ...slobodniStolovi.map(table => table.y + radius * 2),\n        ...zauzetiStolovi.map(table => table.y + radius * 2),\n        restoran.kitchen.y + kitchenHeight,\n        restoran.toilets.y + toiletHeight\n    );\n\n\n    let shiftX = 0;\n    let shiftY = 0;\n\n    if (minX < 0) { // Ukoliko je minimum X van kanvasa, pomeramo ga za minX u desno\n        shiftX = -minX;\n    } else if (maxX > canvasWidth) { // ukoliko je maximum X van kanvasa, pomeramo ga za razdaljinu ivice kanvasa do maximum X u levo\n        shiftX = canvasWidth - maxX;\n    }\n\n    if (minY < 0) { // ukoliko je minimum Y van kanvasa, pomeramo ga za minY na gore\n        shiftY = -minY; \n    } else if (maxY > canvasHeight) { // ukoliko je maximum Y van kanvasa, pomeramo ga za razdaljinu ivice kanvasa do maximum Y na dole\n        shiftY = canvasHeight - maxY;\n    }\n\n    const adjustPosition = (x: number, y: number) => { // funkcija za podesavanje koordinata\n        return { x: x + shiftX, y: y + shiftY };\n    };\n\n    slobodniStolovi.forEach(table => {\n        let { x, y } = adjustPosition(table.x, table.y); // ako je potrebno podesavanje, pomerimo sve\n        const centerX = x + radius;\n        const centerY = y + radius;\n\n        this.ctx.beginPath();\n        this.ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n        this.ctx.fillStyle = 'white';\n        this.ctx.fill();\n        this.ctx.strokeStyle = 'black';\n        this.ctx.lineWidth = 2;\n        this.ctx.stroke();\n        this.ctx.closePath();\n\n        this.ctx.fillStyle = 'black';\n        this.ctx.textAlign = 'center';\n        this.ctx.textBaseline = 'middle';\n        this.ctx.fillText(`Table ${table.id}`, centerX, centerY);\n    });\n\n    zauzetiStolovi.forEach(table => {\n        let { x, y } = adjustPosition(table.x, table.y); // ako je potrebno podesavanje, podesimo sve\n        const centerX = x + radius;\n        const centerY = y + radius;\n\n        this.ctx.beginPath();\n        this.ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n        this.ctx.fillStyle = 'red';\n        this.ctx.fill();\n        this.ctx.strokeStyle = 'black';\n        this.ctx.lineWidth = 2;\n        this.ctx.stroke();\n        this.ctx.closePath();\n\n        this.ctx.fillStyle = 'black';\n        this.ctx.textAlign = 'center';\n        this.ctx.textBaseline = 'middle';\n        this.ctx.fillText(`Table ${table.id}`, centerX, centerY);\n    });\n\n    let kitchenPos = adjustPosition(restoran.kitchen.x, restoran.kitchen.y); // ako je potrebno podesavanje, podesimo kuhinju\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillRect(kitchenPos.x, kitchenPos.y, kitchenWidth, kitchenHeight);\n    this.ctx.strokeStyle = 'black';\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(kitchenPos.x, kitchenPos.y, kitchenWidth, kitchenHeight);\n    this.ctx.fillStyle = 'black';\n    this.ctx.textAlign = 'start';\n    this.ctx.textBaseline = 'top';\n    this.ctx.fillText('Kuhinja', kitchenPos.x + 5, kitchenPos.y + 5);\n\n    let toiletPos = adjustPosition(restoran.toilets.x, restoran.toilets.y); // ako je potrebno podesavanje, podesimo toalet\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillRect(toiletPos.x, toiletPos.y, toiletWidth, toiletHeight);\n    this.ctx.strokeStyle = 'black';\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(toiletPos.x, toiletPos.y, toiletWidth, toiletHeight);\n    this.ctx.fillStyle = 'black';\n    this.ctx.textAlign = 'start';\n    this.ctx.textBaseline = 'top';\n    this.ctx.fillText('Toalet', toiletPos.x + 5, toiletPos.y + 5);\n  }\n}\n","<div class=\"canvas-container\">\n    <canvas #canvas width=\"600\" height=\"500\"></canvas>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}