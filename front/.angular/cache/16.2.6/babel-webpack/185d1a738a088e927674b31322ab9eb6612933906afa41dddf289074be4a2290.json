{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../services/restoran.service\";\nconst _c0 = [\"canvas\"];\nexport class LayoutComponent {\n  constructor(http, restoranService) {\n    this.http = http;\n    this.restoranService = restoranService;\n    this.restoran = null;\n    this.stolovi = [];\n  }\n  ngOnInit() {\n    this.restoranService.layout().subscribe(rez => {\n      this.restoran = rez.restoran;\n      this.stolovi = rez.stolovi;\n      this.ctx = this.canvas.nativeElement.getContext('2d');\n      this.drawLayout(this.restoran, this.stolovi);\n    });\n  }\n  drawLayout(restoran, stolovi) {\n    this.ctx.clearRect(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    stolovi.forEach(table => {\n      this.ctx.fillStyle = 'green';\n      this.ctx.fillRect(table.x, table.y, 50, 50);\n      this.ctx.fillStyle = 'black';\n      this.ctx.fillText(`Table ${table.id}`, table.x, table.y);\n    });\n    this.ctx.fillStyle = 'blue';\n    this.ctx.fillRect(restoran.kitchen.x, restoran.kitchen.y, 100, 100);\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillText('Kitchen', restoran.kitchen.x, restoran.kitchen.y);\n    this.ctx.fillStyle = 'purple';\n    this.ctx.fillRect(restoran.toilets.x, restoran.toilets.y, 50, 50);\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillText('Toilets', restoran.toilets.x, restoran.toilets.y);\n  }\n  static #_ = this.ɵfac = function LayoutComponent_Factory(t) {\n    return new (t || LayoutComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.RestoranService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LayoutComponent,\n    selectors: [[\"app-layout\"]],\n    viewQuery: function LayoutComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n      }\n    },\n    inputs: {\n      layoutData: \"layoutData\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"width\", \"800\", \"height\", \"600\"], [\"canvas\", \"\"]],\n    template: function LayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"canvas\", 0, 1);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LayoutComponent","constructor","http","restoranService","restoran","stolovi","ngOnInit","layout","subscribe","rez","ctx","canvas","nativeElement","getContext","drawLayout","clearRect","width","height","forEach","table","fillStyle","fillRect","x","y","fillText","id","kitchen","toilets","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","RestoranService","_2","selectors","viewQuery","LayoutComponent_Query","rf","ɵɵelement"],"sources":["C:\\Users\\Perovic\\Desktop\\PIA\\front\\src\\app\\layout\\layout.component.ts","C:\\Users\\Perovic\\Desktop\\PIA\\front\\src\\app\\layout\\layout.component.html"],"sourcesContent":["import { Component, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { LayoutResponse } from '../models/LayoutResponse';\nimport { HttpClient } from '@angular/common/http';\nimport { RestoranService } from '../services/restoran.service';\nimport { restoran } from '../models/restoran';\nimport { sto } from '../models/sto';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n  \n  @Input() layoutData: any; \n  @ViewChild('canvas', { static: true }) canvas: ElementRef<HTMLCanvasElement>;\n  private ctx: CanvasRenderingContext2D;\n  restoran: restoran = null;\n  stolovi: sto[] = [];\n\n  constructor(private http: HttpClient, private restoranService: RestoranService) {}\n\n  \n  ngOnInit(): void {\n    this.restoranService.layout().subscribe((rez: any)=>{\n      this.restoran = rez.restoran;\n      this.stolovi = rez.stolovi;\n      this.ctx = this.canvas.nativeElement.getContext('2d');\n      this.drawLayout(this.restoran, this.stolovi);\n    })\n  }\n\n  private drawLayout(restoran: restoran, stolovi: sto[]): void {\n    this.ctx.clearRect(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n\n    stolovi.forEach(table => {\n      this.ctx.fillStyle = 'green';\n      this.ctx.fillRect(table.x, table.y, 50, 50);\n      this.ctx.fillStyle = 'black';\n      this.ctx.fillText(`Table ${table.id}`, table.x, table.y);\n    });\n\n    this.ctx.fillStyle = 'blue';\n    this.ctx.fillRect(restoran.kitchen.x, restoran.kitchen.y, 100, 100);\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillText('Kitchen', restoran.kitchen.x, restoran.kitchen.y);\n\n    this.ctx.fillStyle = 'purple';\n    this.ctx.fillRect(restoran.toilets.x, restoran.toilets.y, 50, 50);\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillText('Toilets', restoran.toilets.x, restoran.toilets.y);\n  }\n}\n","<canvas #canvas width=\"800\" height=\"600\"></canvas>\n"],"mappings":";;;;AAYA,OAAM,MAAOA,eAAe;EAQ1BC,YAAoBC,IAAgB,EAAUC,eAAgC;IAA1D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,eAAe,GAAfA,eAAe;IAH7D,KAAAC,QAAQ,GAAa,IAAI;IACzB,KAAAC,OAAO,GAAU,EAAE;EAE8D;EAGjFC,QAAQA,CAAA;IACN,IAAI,CAACH,eAAe,CAACI,MAAM,EAAE,CAACC,SAAS,CAAEC,GAAQ,IAAG;MAClD,IAAI,CAACL,QAAQ,GAAGK,GAAG,CAACL,QAAQ;MAC5B,IAAI,CAACC,OAAO,GAAGI,GAAG,CAACJ,OAAO;MAC1B,IAAI,CAACK,GAAG,GAAG,IAAI,CAACC,MAAM,CAACC,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;MACrD,IAAI,CAACC,UAAU,CAAC,IAAI,CAACV,QAAQ,EAAE,IAAI,CAACC,OAAO,CAAC;IAC9C,CAAC,CAAC;EACJ;EAEQS,UAAUA,CAACV,QAAkB,EAAEC,OAAc;IACnD,IAAI,CAACK,GAAG,CAACK,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACJ,MAAM,CAACC,aAAa,CAACI,KAAK,EAAE,IAAI,CAACL,MAAM,CAACC,aAAa,CAACK,MAAM,CAAC;IAE3FZ,OAAO,CAACa,OAAO,CAACC,KAAK,IAAG;MACtB,IAAI,CAACT,GAAG,CAACU,SAAS,GAAG,OAAO;MAC5B,IAAI,CAACV,GAAG,CAACW,QAAQ,CAACF,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAC3C,IAAI,CAACb,GAAG,CAACU,SAAS,GAAG,OAAO;MAC5B,IAAI,CAACV,GAAG,CAACc,QAAQ,CAAC,SAASL,KAAK,CAACM,EAAE,EAAE,EAAEN,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACI,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEF,IAAI,CAACb,GAAG,CAACU,SAAS,GAAG,MAAM;IAC3B,IAAI,CAACV,GAAG,CAACW,QAAQ,CAACjB,QAAQ,CAACsB,OAAO,CAACJ,CAAC,EAAElB,QAAQ,CAACsB,OAAO,CAACH,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IACnE,IAAI,CAACb,GAAG,CAACU,SAAS,GAAG,OAAO;IAC5B,IAAI,CAACV,GAAG,CAACc,QAAQ,CAAC,SAAS,EAAEpB,QAAQ,CAACsB,OAAO,CAACJ,CAAC,EAAElB,QAAQ,CAACsB,OAAO,CAACH,CAAC,CAAC;IAEpE,IAAI,CAACb,GAAG,CAACU,SAAS,GAAG,QAAQ;IAC7B,IAAI,CAACV,GAAG,CAACW,QAAQ,CAACjB,QAAQ,CAACuB,OAAO,CAACL,CAAC,EAAElB,QAAQ,CAACuB,OAAO,CAACJ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACjE,IAAI,CAACb,GAAG,CAACU,SAAS,GAAG,OAAO;IAC5B,IAAI,CAACV,GAAG,CAACc,QAAQ,CAAC,SAAS,EAAEpB,QAAQ,CAACuB,OAAO,CAACL,CAAC,EAAElB,QAAQ,CAACuB,OAAO,CAACJ,CAAC,CAAC;EACtE;EAAC,QAAAK,CAAA,G;qBAvCU5B,eAAe,EAAA6B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfnC,eAAe;IAAAoC,SAAA;IAAAC,SAAA,WAAAC,sBAAAC,EAAA,EAAA7B,GAAA;MAAA,IAAA6B,EAAA;;;;;;;;;;;;;;;;QCZ5BV,EAAA,CAAAW,SAAA,mBAAkD"},"metadata":{},"sourceType":"module","externalDependencies":[]}