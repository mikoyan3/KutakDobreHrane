{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../layout/layout.component\";\nfunction AdminComponent_app_layout_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-layout\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"layoutData\", ctx_r0.layoutData);\n  }\n}\nexport class AdminComponent {\n  constructor(http) {\n    this.http = http;\n    this.selectedFile = null;\n  }\n  onFileSelected(event) {\n    const input = event.target;\n    if (input.files.length > 0) {\n      this.selectedFile = input.files[0];\n    }\n  }\n  uploadLayout() {\n    const formData = new FormData();\n    formData.append('layout', this.selectedFile, this.selectedFile.name);\n    this.http.post('http://localhost:4000/restoran/upload-layout', formData).subscribe({\n      next: response => {\n        console.log('Upload response:', response);\n        this.fetchLayout();\n      },\n      error: error => {\n        console.error('Error uploading layout:', error);\n      }\n    });\n  }\n  fetchLayout() {\n    this.http.get('http://localhost:4000/restoran/layout').subscribe({\n      next: data => {\n        this.layoutData = data;\n      },\n      error: error => {\n        console.error('Error fetching layout:', error);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function AdminComponent_Factory(t) {\n    return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminComponent,\n    selectors: [[\"app-admin\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[1, \"container\"], [\"enctype\", \"multipart/form-data\", 3, \"ngSubmit\"], [\"type\", \"file\", \"accept\", \".json\", 3, \"change\"], [\"type\", \"submit\"], [3, \"layoutData\", 4, \"ngIf\"], [3, \"layoutData\"]],\n    template: function AdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Upload Layout\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AdminComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.uploadLayout();\n        });\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"change\", function AdminComponent_Template_input_change_4_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵtext(6, \"Upload Layout\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵtemplate(8, AdminComponent_app_layout_8_Template, 1, 1, \"app-layout\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.layoutData);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.LayoutComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","layoutData","AdminComponent","constructor","http","selectedFile","onFileSelected","event","input","target","files","length","uploadLayout","formData","FormData","append","name","post","subscribe","next","response","console","log","fetchLayout","error","get","data","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","AdminComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AdminComponent_Template_form_ngSubmit_3_listener","AdminComponent_Template_input_change_4_listener","$event","ɵɵtemplate","AdminComponent_app_layout_8_Template","ɵɵadvance"],"sources":["C:\\Users\\Perovic\\Desktop\\PIA\\front\\src\\app\\admin\\admin.component.ts","C:\\Users\\Perovic\\Desktop\\PIA\\front\\src\\app\\admin\\admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LayoutResponse } from '../models/LayoutResponse';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent {\n  selectedFile: File = null;\n  layoutData: LayoutResponse;\n\n  constructor(private http: HttpClient) {}\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files.length > 0) {\n      this.selectedFile = input.files[0];\n    }\n  }\n\n  uploadLayout(): void {\n    const formData = new FormData();\n    formData.append('layout', this.selectedFile, this.selectedFile.name);\n\n    this.http.post('http://localhost:4000/restoran/upload-layout', formData)\n      .subscribe({\n        next: (response: any) => {\n          console.log('Upload response:', response);\n          this.fetchLayout(); \n        },\n        error: (error: any) => {\n          console.error('Error uploading layout:', error);\n          \n        }\n      });\n  }\n\n  private fetchLayout(): void {\n    this.http.get<LayoutResponse>('http://localhost:4000/restoran/layout')\n      .subscribe({\n        next: (data: LayoutResponse) => {\n          this.layoutData = data; \n        },\n        error: (error: any) => {\n          console.error('Error fetching layout:', error);\n          \n        }\n      });\n  }\n}\n","<div class=\"container\">\n    <h2>Upload Layout</h2>\n    <form (ngSubmit)=\"uploadLayout()\" enctype=\"multipart/form-data\">\n      <input type=\"file\" (change)=\"onFileSelected($event)\" accept=\".json\">\n      <button type=\"submit\">Upload Layout</button>\n    </form>\n  \n    <hr>\n  \n    <app-layout *ngIf=\"layoutData\" [layoutData]=\"layoutData\"></app-layout>\n  </div>\n  "],"mappings":";;;;;;;ICSIA,EAAA,CAAAC,SAAA,oBAAsE;;;;IAAvCD,EAAA,CAAAE,UAAA,eAAAC,MAAA,CAAAC,UAAA,CAAyB;;;ADC5D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,YAAY,GAAS,IAAI;EAGc;EAEvCC,cAAcA,CAACC,KAAY;IACzB,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAA0B;IAC9C,IAAID,KAAK,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC1B,IAAI,CAACN,YAAY,GAAGG,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;;EAEtC;EAEAE,YAAYA,CAAA;IACV,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACV,YAAY,EAAE,IAAI,CAACA,YAAY,CAACW,IAAI,CAAC;IAEpE,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAC,8CAA8C,EAAEJ,QAAQ,CAAC,CACrEK,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAa,IAAI;QACtBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;QACzC,IAAI,CAACG,WAAW,EAAE;MACpB,CAAC;MACDC,KAAK,EAAGA,KAAU,IAAI;QACpBH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAEjD;KACD,CAAC;EACN;EAEQD,WAAWA,CAAA;IACjB,IAAI,CAACnB,IAAI,CAACqB,GAAG,CAAiB,uCAAuC,CAAC,CACnEP,SAAS,CAAC;MACTC,IAAI,EAAGO,IAAoB,IAAI;QAC7B,IAAI,CAACzB,UAAU,GAAGyB,IAAI;MACxB,CAAC;MACDF,KAAK,EAAGA,KAAU,IAAI;QACpBH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAEhD;KACD,CAAC;EACN;EAAC,QAAAG,CAAA,G;qBAzCUzB,cAAc,EAAAL,EAAA,CAAA+B,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAd7B,cAAc;IAAA8B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3BzC,EAAA,CAAA2C,cAAA,aAAuB;QACf3C,EAAA,CAAA4C,MAAA,oBAAa;QAAA5C,EAAA,CAAA6C,YAAA,EAAK;QACtB7C,EAAA,CAAA2C,cAAA,cAAgE;QAA1D3C,EAAA,CAAA8C,UAAA,sBAAAC,iDAAA;UAAA,OAAYL,GAAA,CAAA3B,YAAA,EAAc;QAAA,EAAC;QAC/Bf,EAAA,CAAA2C,cAAA,eAAoE;QAAjD3C,EAAA,CAAA8C,UAAA,oBAAAE,gDAAAC,MAAA;UAAA,OAAUP,GAAA,CAAAjC,cAAA,CAAAwC,MAAA,CAAsB;QAAA,EAAC;QAApDjD,EAAA,CAAA6C,YAAA,EAAoE;QACpE7C,EAAA,CAAA2C,cAAA,gBAAsB;QAAA3C,EAAA,CAAA4C,MAAA,oBAAa;QAAA5C,EAAA,CAAA6C,YAAA,EAAS;QAG9C7C,EAAA,CAAAC,SAAA,SAAI;QAEJD,EAAA,CAAAkD,UAAA,IAAAC,oCAAA,wBAAsE;QACxEnD,EAAA,CAAA6C,YAAA,EAAM;;;QADS7C,EAAA,CAAAoD,SAAA,GAAgB;QAAhBpD,EAAA,CAAAE,UAAA,SAAAwC,GAAA,CAAAtC,UAAA,CAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}