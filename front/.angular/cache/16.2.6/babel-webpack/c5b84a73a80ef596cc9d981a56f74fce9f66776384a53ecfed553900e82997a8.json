{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst _c0 = [\"canvas\"];\nexport class LayoutComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  fetchLayout() {\n    this.http.get('http://localhost:4000/restoran/layout').subscribe({\n      next: data => {\n        this.layoutData = data;\n      },\n      error: error => {\n        console.error('Error fetching layout:', error);\n      }\n    });\n  }\n  ngOnInit() {\n    this.fetchLayout();\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    if (this.layoutData) {\n      this.drawLayout(this.layoutData);\n    }\n  }\n  drawLayout(data) {\n    this.ctx.clearRect(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    data.tables.forEach(table => {\n      this.ctx.fillStyle = 'green';\n      this.ctx.fillRect(table.x, table.y, 50, 50);\n      this.ctx.fillStyle = 'black';\n      this.ctx.fillText(`Table ${table.id}`, table.x, table.y);\n    });\n    this.ctx.fillStyle = 'blue';\n    this.ctx.fillRect(data.kitchen.x, data.kitchen.y, 100, 100);\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillText('Kitchen', data.kitchen.x, data.kitchen.y);\n    this.ctx.fillStyle = 'purple';\n    this.ctx.fillRect(data.toilets.x, data.toilets.y, 50, 50);\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillText('Toilets', data.toilets.x, data.toilets.y);\n  }\n  static #_ = this.ɵfac = function LayoutComponent_Factory(t) {\n    return new (t || LayoutComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LayoutComponent,\n    selectors: [[\"app-layout\"]],\n    viewQuery: function LayoutComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n      }\n    },\n    inputs: {\n      layoutData: \"layoutData\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"width\", \"800\", \"height\", \"600\"], [\"canvas\", \"\"]],\n    template: function LayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"canvas\", 0, 1);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LayoutComponent","constructor","http","fetchLayout","get","subscribe","next","data","layoutData","error","console","ngOnInit","ctx","canvas","nativeElement","getContext","drawLayout","clearRect","width","height","tables","forEach","table","fillStyle","fillRect","x","y","fillText","id","kitchen","toilets","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","viewQuery","LayoutComponent_Query","rf","ɵɵelement"],"sources":["C:\\Users\\Perovic\\Desktop\\PIA\\front\\src\\app\\layout\\layout.component.ts","C:\\Users\\Perovic\\Desktop\\PIA\\front\\src\\app\\layout\\layout.component.html"],"sourcesContent":["import { Component, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { LayoutResponse } from '../models/LayoutResponse';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n  \n  @Input() layoutData: any; \n  @ViewChild('canvas', { static: true }) canvas: ElementRef<HTMLCanvasElement>;\n  private ctx: CanvasRenderingContext2D;\n\n  constructor(private http: HttpClient) {}\n\n  private fetchLayout(): void {\n    this.http.get<LayoutResponse>('http://localhost:4000/restoran/layout')\n      .subscribe({\n        next: (data: LayoutResponse) => {\n          this.layoutData = data; \n        },\n        error: (error: any) => {\n          console.error('Error fetching layout:', error);\n          \n        }\n      });\n  }\n  ngOnInit(): void {\n    this.fetchLayout();\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n\n    if (this.layoutData) {\n      this.drawLayout(this.layoutData); \n    }\n  }\n\n  private drawLayout(data: any): void {\n    this.ctx.clearRect(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n\n    data.tables.forEach(table => {\n      this.ctx.fillStyle = 'green';\n      this.ctx.fillRect(table.x, table.y, 50, 50);\n      this.ctx.fillStyle = 'black';\n      this.ctx.fillText(`Table ${table.id}`, table.x, table.y);\n    });\n\n    this.ctx.fillStyle = 'blue';\n    this.ctx.fillRect(data.kitchen.x, data.kitchen.y, 100, 100);\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillText('Kitchen', data.kitchen.x, data.kitchen.y);\n\n    this.ctx.fillStyle = 'purple';\n    this.ctx.fillRect(data.toilets.x, data.toilets.y, 50, 50);\n    this.ctx.fillStyle = 'white';\n    this.ctx.fillText('Toilets', data.toilets.x, data.toilets.y);\n  }\n}\n","<canvas #canvas width=\"800\" height=\"600\"></canvas>\n"],"mappings":";;;AASA,OAAM,MAAOA,eAAe;EAM1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAE/BC,WAAWA,CAAA;IACjB,IAAI,CAACD,IAAI,CAACE,GAAG,CAAiB,uCAAuC,CAAC,CACnEC,SAAS,CAAC;MACTC,IAAI,EAAGC,IAAoB,IAAI;QAC7B,IAAI,CAACC,UAAU,GAAGD,IAAI;MACxB,CAAC;MACDE,KAAK,EAAGA,KAAU,IAAI;QACpBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAEhD;KACD,CAAC;EACN;EACAE,QAAQA,CAAA;IACN,IAAI,CAACR,WAAW,EAAE;IAClB,IAAI,CAACS,GAAG,GAAG,IAAI,CAACC,MAAM,CAACC,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;IAErD,IAAI,IAAI,CAACP,UAAU,EAAE;MACnB,IAAI,CAACQ,UAAU,CAAC,IAAI,CAACR,UAAU,CAAC;;EAEpC;EAEQQ,UAAUA,CAACT,IAAS;IAC1B,IAAI,CAACK,GAAG,CAACK,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACJ,MAAM,CAACC,aAAa,CAACI,KAAK,EAAE,IAAI,CAACL,MAAM,CAACC,aAAa,CAACK,MAAM,CAAC;IAE3FZ,IAAI,CAACa,MAAM,CAACC,OAAO,CAACC,KAAK,IAAG;MAC1B,IAAI,CAACV,GAAG,CAACW,SAAS,GAAG,OAAO;MAC5B,IAAI,CAACX,GAAG,CAACY,QAAQ,CAACF,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAC3C,IAAI,CAACd,GAAG,CAACW,SAAS,GAAG,OAAO;MAC5B,IAAI,CAACX,GAAG,CAACe,QAAQ,CAAC,SAASL,KAAK,CAACM,EAAE,EAAE,EAAEN,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACI,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEF,IAAI,CAACd,GAAG,CAACW,SAAS,GAAG,MAAM;IAC3B,IAAI,CAACX,GAAG,CAACY,QAAQ,CAACjB,IAAI,CAACsB,OAAO,CAACJ,CAAC,EAAElB,IAAI,CAACsB,OAAO,CAACH,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3D,IAAI,CAACd,GAAG,CAACW,SAAS,GAAG,OAAO;IAC5B,IAAI,CAACX,GAAG,CAACe,QAAQ,CAAC,SAAS,EAAEpB,IAAI,CAACsB,OAAO,CAACJ,CAAC,EAAElB,IAAI,CAACsB,OAAO,CAACH,CAAC,CAAC;IAE5D,IAAI,CAACd,GAAG,CAACW,SAAS,GAAG,QAAQ;IAC7B,IAAI,CAACX,GAAG,CAACY,QAAQ,CAACjB,IAAI,CAACuB,OAAO,CAACL,CAAC,EAAElB,IAAI,CAACuB,OAAO,CAACJ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACzD,IAAI,CAACd,GAAG,CAACW,SAAS,GAAG,OAAO;IAC5B,IAAI,CAACX,GAAG,CAACe,QAAQ,CAAC,SAAS,EAAEpB,IAAI,CAACuB,OAAO,CAACL,CAAC,EAAElB,IAAI,CAACuB,OAAO,CAACJ,CAAC,CAAC;EAC9D;EAAC,QAAAK,CAAA,G;qBAhDU/B,eAAe,EAAAgC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfpC,eAAe;IAAAqC,SAAA;IAAAC,SAAA,WAAAC,sBAAAC,EAAA,EAAA5B,GAAA;MAAA,IAAA4B,EAAA;;;;;;;;;;;;;;;;QCT5BR,EAAA,CAAAS,SAAA,mBAAkD"},"metadata":{},"sourceType":"module","externalDependencies":[]}