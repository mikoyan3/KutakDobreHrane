{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RestoranComponent = class RestoranComponent {\n  constructor(restoranService, router, sanitizer) {\n    this.restoranService = restoranService;\n    this.router = router;\n    this.sanitizer = sanitizer;\n    this.restoran = null;\n    this.recenzije = [];\n    this.reservation = {\n      date: '',\n      people: 1,\n      requests: ''\n    };\n    this.validationMessage = '';\n    this.validationMessageSuccess = '';\n    this.isReservationValid = true;\n    this.gost = null;\n    this.jelovnik = [];\n    this.korpa = [];\n  }\n  ngOnInit() {\n    let rest = localStorage.getItem('restoran');\n    let usr = localStorage.getItem('ulogovan');\n    if (usr != null) this.gost = JSON.parse(usr);\n    this.restoranService.getRestoranWithNaziv(rest).subscribe(rez => {\n      this.restoran = rez;\n      this.restoranService.getRecenzijeForRestoran(rest).subscribe(rec => {\n        this.recenzije = rec;\n        this.restoranService.getJelaForRestoran(this.restoran.naziv).subscribe(jela => {\n          this.jelovnik = jela;\n        });\n      });\n    });\n  }\n  makeReservation() {\n    const date = new Date(this.reservation.date);\n    const now = new Date();\n    if (date < now) {\n      this.validationMessage = 'Datum i vreme ne mogu biti u proslosti!';\n      this.isReservationValid = false;\n      return;\n    }\n    if (this.reservation.people < 1) {\n      this.validationMessage = 'Broj osoba ne moze biti manji od 1!';\n      this.isReservationValid = false;\n      return;\n    }\n    this.restoranService.kreirajRezervaciju(date, this.reservation.people, this.reservation.requests, this.restoran.naziv, this.gost.username).subscribe(rez => {\n      if (rez == \"Uspesno ste poslali zahtev za rezervacijom!\") {\n        this.validationMessage = '';\n        this.validationMessageSuccess = rez;\n      } else {\n        this.validationMessageSuccess = '';\n        this.validationMessage = rez;\n      }\n    });\n  }\n  getSlikaJelo(jeloId) {\n    this.restoranService.getSlikaJelo(jeloId).subscribe(data => {\n      const blob = new Blob([data]);\n      const url = URL.createObjectURL(blob);\n      let fileDownloaded = null;\n      fileDownloaded = this.sanitizer.bypassSecurityTrustUrl(url);\n      return fileDownloaded;\n    });\n  }\n};\nRestoranComponent = __decorate([Component({\n  selector: 'app-restoran',\n  templateUrl: './restoran.component.html',\n  styleUrls: ['./restoran.component.css']\n})], RestoranComponent);","map":{"version":3,"names":["Component","RestoranComponent","constructor","restoranService","router","sanitizer","restoran","recenzije","reservation","date","people","requests","validationMessage","validationMessageSuccess","isReservationValid","gost","jelovnik","korpa","ngOnInit","rest","localStorage","getItem","usr","JSON","parse","getRestoranWithNaziv","subscribe","rez","getRecenzijeForRestoran","rec","getJelaForRestoran","naziv","jela","makeReservation","Date","now","kreirajRezervaciju","username","getSlikaJelo","jeloId","data","blob","Blob","url","URL","createObjectURL","fileDownloaded","bypassSecurityTrustUrl","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Perovic\\Desktop\\PIA\\front\\src\\app\\restoran\\restoran.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { restoran } from '../models/restoran';\nimport { recenzija } from '../models/recenzija';\nimport { RestoranService } from '../services/restoran.service';\nimport { Router } from '@angular/router';\nimport { gost } from '../models/gost';\nimport { jelo } from '../models/jelo';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { deoNarudzbine } from '../models/deoNarudzbine';\n\n@Component({\n  selector: 'app-restoran',\n  templateUrl: './restoran.component.html',\n  styleUrls: ['./restoran.component.css']\n})\nexport class RestoranComponent implements OnInit{\n  restoran: restoran = null;\n  recenzije: recenzija[] = [];\n  reservation = {\n    date: '',\n    people: 1,\n    requests: ''\n  };\n  validationMessage: string = '';\n  validationMessageSuccess: string = '';\n  isReservationValid: boolean = true;\n  gost: gost = null;\n  jelovnik: jelo[] = [];\n  korpa: deoNarudzbine[] = [];\n\n  constructor(private restoranService: RestoranService, private router: Router, private sanitizer: DomSanitizer){}\n  \n  ngOnInit(): void {\n    let rest = localStorage.getItem('restoran');\n    let usr = localStorage.getItem('ulogovan');\n    if(usr != null) this.gost = JSON.parse(usr);\n    this.restoranService.getRestoranWithNaziv(rest).subscribe(rez=>{\n      this.restoran = rez;\n      this.restoranService.getRecenzijeForRestoran(rest).subscribe(rec=>{\n        this.recenzije = rec;\n        this.restoranService.getJelaForRestoran(this.restoran.naziv).subscribe(jela=>{\n          this.jelovnik = jela;\n        })\n      })\n    })\n  }\n\n  makeReservation(){\n    const date = new Date(this.reservation.date);\n    const now = new Date();\n\n    if(date < now){\n      this.validationMessage = 'Datum i vreme ne mogu biti u proslosti!'\n      this.isReservationValid = false;\n      return;\n    }\n    if(this.reservation.people < 1){\n      this.validationMessage = 'Broj osoba ne moze biti manji od 1!';\n      this.isReservationValid = false;\n      return;\n    }\n\n    this.restoranService.kreirajRezervaciju(date, this.reservation.people, this.reservation.requests, this.restoran.naziv, this.gost.username).subscribe(rez=>{\n      if(rez == \"Uspesno ste poslali zahtev za rezervacijom!\"){\n        this.validationMessage = '';\n        this.validationMessageSuccess = rez;\n      } else {\n        this.validationMessageSuccess = '';\n        this.validationMessage = rez;\n      }\n    })\n  }\n\n  getSlikaJelo(jeloId: number){\n    this.restoranService.getSlikaJelo(jeloId).subscribe(data=>{\n      const blob = new Blob([data]);\n      const url = URL.createObjectURL(blob);\n      let fileDownloaded: SafeUrl | null = null;\n      fileDownloaded = this.sanitizer.bypassSecurityTrustUrl(url);\n      return fileDownloaded;\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}